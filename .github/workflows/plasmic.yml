# @format

# Plasmic workflow v4
name: Sync, build and deploy Plasmic app

permissions:
  contents: write
  pages: write
  pull-requests: write

on:
  workflow_dispatch:
  repository_dispatch:
    types: [plasmic]

jobs:
  job:
    name: Sync, build and deploy
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checking out repository...
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      - id: node
        name: Setting up node v18...
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - id: cache
        name: Recovering cache...
        uses: actions/cache@v2
        with:
          key: lock-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          path: ./node_modules
      - id: sync
        run: |
          set -o errexit -o nounset
          new_branch="$( echo $RANDOM | md5sum | head -c 8; echo )"
          git checkout -B "$new_branch"
          npm i
          npx plasmic sync --yes
          npm run build
          git add -A .
          git config user.name "Test"
          git config user.email "test@plasmic.app"
          if [[ "$( git status --untracked-files=no --porcelain )" ]] ; then
            git commit -m 'Message'
            echo new_branch="$new_branch" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - id: pr
        name: Creating pull request...
        uses: repo-sync/pull-request@v2
        if: ${{ steps.sync.outputs.new_branch }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: ${{ steps.sync.outputs.new_branch }}
          destination_branch: main
